# Kudos to https://github.com/JaKooLit providing the base

$mainMod = SUPER
$files = thunar
$term = kitty
$browser = firefox
$scriptsDir = $HOME/.config/hypr/scripts

# rofi App launcher
bindr = $mainMod, $mainMod_L, exec, pkill rofi || rofi -show drun -modi drun,filebrowser,run,window

# Open term
bind = , F12, exec, $term
# Open thunar
bind = $mainMod, T, exec, $files
# Open browser
bind = $mainMod, F, exec, $browser

# Dirs
$scriptsDir = $HOME/.config/hypr/scripts
$configs = $HOME/.config/hypr/configs
# User
$UserConfigs = $HOME/.config/hypr/UserConfigs

# Kill session with windows trinity
bind = CTRL ALT, Delete, exec, hyprctl dispatch exit 0
# kill active window
bind = $mainMod, Q, killactive,
# toggle fullscreen for the active window
bind = $mainMod, Return, fullscreen
# force active killed
bind = $mainMod SHIFT, Q, closewindow, 
# toggle floating state for the active window
bind = $mainMod SHIFT, F, togglefloating,
# toggle floating state for all windows in the current workspace
bind = $mainMod ALT, F, exec, hyprctl dispatch workspaceopt allfloat
# lock the screen
bind = CTRL ALT, L, exec, $scriptsDir/utils/LockScreen.sh
# shutdown/logout menu
bind = $mainMod, D, exec, $scriptsDir/utils/Wlogout.sh

# FEATURES / EXTRAS
# Quick access to hypr configs
bind = $mainMod, H, exec, $scriptsDir/rofi/QuickEdit.sh
# Rofi wallpaper picker
bind = $mainMod, W, exec, $scriptsDir/wallpaperAndStyle/WallpaperSelect.sh
# Random wallpaper
bind = $mainMod SHIFT, W, exec, $scriptsDir/wallpaperAndStyle/WallpaperRandom.sh

# Rofi emoji picker
bind = $mainMod, E, exec, $scriptsDir/rofi/RofiEmoji.sh
# Toggle blur weak/strong
bind = $mainMod, F3, exec, $scriptsDir/wallpaperAndStyle/ChangeBlur.sh 
# animations off / low resources mode
bind = $mainMod SHIFT, G, exec, $scriptsDir/utils/GameMode.sh
# toggle keyboard layouts
bind = $mainMod ,space, exec, $scriptsDir/utils/SwitchKeyboardLayout.sh
# rofi clipboard history
bind = $mainMod, V, exec, $scriptsDir/rofi/ClipManager.sh
# notifications panel
bind = $mainMod SHIFT, N, exec, swaync-client -t -sw

# Waybar / Bar related
# Toggle hide/show waybar 
bind = $mainMod, B, exec, killall -SIGUSR1 waybar
# Refresh waybar, swaync, rofi
bind = $mainMod, F5, exec, $scriptsDir/wallpaperAndStyle/Refresh.sh 

# Master Layout
# toggle master/dwindle tiler mode
bind = $mainMod , L, exec, $scriptsDir/wallpaperAndStyle/ChangeLayout.sh

bind = $mainMod, M, layoutmsg, addmaster
bind = $mainMod SHIFT, M, layoutmsg, removemaster
bind = $mainMod CTRL, M, layoutmsg, swapwithmaster

# Special Keys / Hot Keys

# volume / mute
bind = , xf86audioraisevolume, exec, $scriptsDir/utils/Volume.sh --inc #volume up
bind = , xf86audiolowervolume, exec, $scriptsDir/utils/Volume.sh --dec #volume down
bind = , xf86AudioMicMute, exec, $scriptsDir/utils/Volume.sh --toggle-mic #mute mic
bind = , xf86audiomute, exec, $scriptsDir/utils/Volume.sh --toggle

bind = , xf86Sleep, exec, systemctl suspend  # sleep button 

# media controls using keyboards
bind = , xf86AudioPlayPause, exec, $scriptsDir/utils/MediaCtrl.sh --pause
bind = , xf86AudioPause, exec, $scriptsDir/utils/MediaCtrl.sh --pause
bind = , xf86AudioPlay, exec, $scriptsDir/utils/MediaCtrl.sh --pause
bind = , xf86AudioNext, exec, $scriptsDir/utils/MediaCtrl.sh --nxt
bind = , xf86AudioPrev, exec, $scriptsDir/utils/MediaCtrl.sh --prv
bind = , xf86audiostop, exec, $scriptsDir/utils/MediaCtrl.sh --stop

# Screenshots handling submap

bind = , Print, exec, $scriptsDir/submaps/ScreenShotMsg.sh
bind = , Print, submap, screenshotSubmap
submap = screenshotSubmap

binde = , n, exec, $scriptsDir/utils/ScreenShot.sh --now
binde = , n, submap, reset

binde = , w, exec, $scriptsDir/utils/ScreenShot.sh --win
binde = , w, submap, reset

binde = , a, exec, $scriptsDir/utils/ScreenShot.sh --area
binde = , a, submap, reset

binde = , s, exec, $scriptsDir/utils/ScreenShot.sh --in5
binde = , s, submap, reset

binde = , l, exec, $scriptsDir/utils/ScreenShot.sh --in10
binde = , l, submap, reset

binde = , e, exec, grim -g "$(slurp)" - | swappy -f -
binde = , e, exec, swaync-client --close-latest
binde = , e, submap, reset


binde = , escape, exec, swaync-client --close-latest
binde = , escape, submap, reset

binde = , Print, exec, swaync-client --close-latest
binde = , Print, submap, reset
submap = reset


# Resizing window submap
bind = $mainMod, R, exec, $scriptsDir/submaps/ResizeMsg.sh
bind = $mainMod, R, submap,resize
submap = resize

binde = ,right, resizeactive, 10 0
binde = ,left, resizeactive, -10 0
binde = ,up, resizeactive, 0 -10
binde = ,down, resizeactive, 0 10
binde = , R, exec, $scriptsDir/utils/RestoreVerticalBalance.sh


binde = , escape, exec, swaync-client --close-latest
binde = ,escape, submap, reset 

binde = $mainMod, R, exec, swaync-client --close-latest
binde = $mainMod, R, submap, reset 
submap=reset

# Move windows
bind = $mainMod SHIFT, left, movewindow, l
bind = $mainMod SHIFT, right, movewindow, r
bind = $mainMod SHIFT, up, movewindow, u
bind = $mainMod SHIFT, down, movewindow, d

# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

# Workspaces related
bind = $mainMod, bracketright, workspace, m+1
bind = $mainMod, bracketleft, workspace, m-1

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window and follow to workspace
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10
bind = $mainMod SHIFT, bracketleft, movetoworkspace, -1 # brackets [ or ]
bind = $mainMod SHIFT, bracketright, movetoworkspace, +1

# Move active window to a workspace silently
bind = $mainMod CTRL, 1, movetoworkspacesilent, 1
bind = $mainMod CTRL, 2, movetoworkspacesilent, 2
bind = $mainMod CTRL, 3, movetoworkspacesilent, 3
bind = $mainMod CTRL, 4, movetoworkspacesilent, 4
bind = $mainMod CTRL, 5, movetoworkspacesilent, 5
bind = $mainMod CTRL, 6, movetoworkspacesilent, 6
bind = $mainMod CTRL, 7, movetoworkspacesilent, 7
bind = $mainMod CTRL, 8, movetoworkspacesilent, 8
bind = $mainMod CTRL, 9, movetoworkspacesilent, 9
bind = $mainMod CTRL, 0, movetoworkspacesilent, 10
bind = $mainMod CTRL, bracketleft, movetoworkspacesilent, -1 # brackets [ or ]
bind = $mainMod CTRL, bracketright, movetoworkspacesilent, +1

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1
bind = $mainMod, period, workspace, e+1
bind = $mainMod, comma, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Toggle calculator
bind = , code:148, exec, $scriptsDir/utils/Calculator.sh


# Decided to use dedicated special workspaces rather than generic one
# Special workspace
# bind = $mainMod SHIFT, End, movetoworkspacesilent, special
# bind = $mainMod, End, togglespecialworkspace,

# Dedicated special workspaces

bind = , F11, exec, $scriptsDir/specialWorkspaces/ChatGptToggle.sh
bind = , F10, exec, $scriptsDir/specialWorkspaces/FerdiumToggle.sh
bind = , F9, exec, $scriptsDir/specialWorkspaces/ThunderbirdToggle.sh
bind = , F8, exec, $scriptsDir/specialWorkspaces/SpotifyToggle.sh

# For passthrough keyboard into a VM
# bind = $mainMod ALT, P, submap, passthru
#submap = passthru
# to unbind
#bind = $mainMod ALT, P, submap, reset
#submap = reset

