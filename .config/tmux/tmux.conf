#    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#    ~                                                                    ~
#    ~                                                                    ~
#    ~    888888888888  88b           d88  88        88  8b        d8     ~
#    ~         88       888b         d888  88        88   Y8,    ,8P      ~
#    ~         88       88`8b       d8'88  88        88    `8b  d8'       ~
#    ~         88       88 `8b     d8' 88  88        88      Y88P         ~
#    ~         88       88  `8b   d8'  88  88        88      d88b         ~
#    ~         88       88   `8b d8'   88  88        88    ,8P  Y8,       ~
#    ~         88       88    `888'    88  Y8a.    .a8P   d8'    `8b      ~
#    ~         88       88     `8'     88   `"Y8888Y"'   8P        Y8     ~
#    ~                                                                    ~
#    ~                                                                    ~
#    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


# set commands for calling popups
set -g update-environment "TMUX_ZSH_POPUP"

setenv -g TMUX_LAZYGIT_POPUP "#{@popup-toggle} \
-Ed '#{pane_current_path}' \
-w80% -h80% \
-s='bg=#{BLACKER}, fg=default' \
--name=lazygit \
-T ' 󰊢 lazygit ' \
lazygit"


# set termcolors as variables
setenv -g BLACK black
setenv -g BLACKER black
setenv -g RED red
setenv -g GREEN green
setenv -g YELLOW yellow
setenv -g BLUE blue
setenv -g MAGENTA magenta
setenv -g CYAN cyan
setenv -g SUBTLE gray
setenv -g WHITE white

# but if in a truecolor terminal set hex values
if '[ $(echo "#{client_termfeatures}" | grep -q RGB) ] && echo "true" || echo "false"' {
  setenv -g BLACK "#191724"
  setenv -g BLACKER "#07060a"
  setenv -g RED "#eb6f92"
  setenv -g GREEN "#abe9b3"
  setenv -g YELLOW "#f6c177"
  setenv -g BLUE "#c4a7e7"
  setenv -g MAGENTA "#ea9a97"
  setenv -g CYAN "#3e8fb0"
  setenv -g MUTED "#6e6a86"
  setenv -g WHITE "#e0def4"
}
 
set -g default-terminal "wezterm"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0


# BINDS
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
# better prefix
set -g prefix C-s
bind-key C-s send-prefix

# sourcing config
unbind r
bind r source-file $HOME/.config/tmux/tmux.conf; display-message "Config reloaded"

# resurrection on capital letters
unbind s
set -g @resurrect-save "S"
set -g @resurrect-restore "R"

# panes and windows in cwd
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind-key c new-window -c "#{pane_current_path}"

# resizing
bind-key -n C-M-h resize-pane -L 2
bind-key -n C-M-j resize-pane -D 2
bind-key -n C-M-k resize-pane -U 2
bind-key -n C-M-l resize-pane -R 2

# copy mode
bind-key C copy-mode
bind-key -T copy-mode-vi C-c send-keys -X cancel
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi C-y send-keys -X copy-line-and-cancel

# renaming
unbind ,
bind-key W command-prompt -p "Rename window to:" "rename-window '%%'"
bind-key $ command-prompt -p "Rename session to:" "rename-session '%%'"

# toggle cycle, move through windows
unbind /
unbind L
unbind l
bind-key / last-window
bind-key l next-window
bind-key h previous-window
bind-key L swap-window -t +1
bind-key H swap-window -t -1

# free up key to use for sessioon picker
unbind-key -T root M-t
 
# toggle panes
bind-key , last-pane

# hijack lower-case t to launch tmux session manager sesh and then use capital T for clock mode
unbind t
bind-key "T" clock-mode
bind-key "t" run-shell "sesh connect \"$(
  sesh list --icons | fzf-tmux -p 65%,50% \
      --no-sort --ansi --border=rounded \
      --color=pointer:\"$GREEN\",border:\"$CYAN\",label:\"$CYAN\",fg:\"$BLUE\",bg:\"$BLACKER\" --border-label ' 󱗿 SESH ' \
      --border-label-pos=4 --prompt '  ' \
      --header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
      --bind 'ctrl-j:down,ctrl-k:up,ctrl-a:accept' \
      --bind 'ctrl-r:change-prompt(  )+reload(sesh list --icons)' \
      --bind 'ctrl-t:change-prompt(  )+reload(sesh list -t --icons)' \
      --bind 'ctrl-g:change-prompt(  )+reload(sesh list -c --icons)' \
      --bind 'ctrl-x:change-prompt(  )+reload(sesh list -z --icons)' \
      --bind 'ctrl-f:change-prompt(󰍉  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
      --bind 'ctrl-d:execute(tmux kill-session -t {2..})+change-prompt(  )+reload(sesh list --icons)')\""

# tmux navigator
set -g @vim_navigator_mapping_left "C-Left C-h"  # use C-h and C-Left
set -g @vim_navigator_mapping_right "C-Right C-l"
set -g @vim_navigator_mapping_up "C-k"
set -g @vim_navigator_mapping_down "C-j"
set -g @vim_navigator_mapping_prev ""  # removes the C-\ binding
bind C-l send-keys 'C-l'
bind-key x kill-pane
bind-key Q kill-server

#popups
bind-key g run "$TMUX_LAZYGIT_POPUP"
bind-key -n M-t run "$TMUX_ZSH_POPUP"


# OTHER SETTINGS
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
set -g mouse on
set -g base-index 1
set -g pane-base-index 1
bind-key 0 move-window -r

# vi mode
set-window-option -g mode-keys vi

# border stuff
set -g pane-active-border-style "bg=default fg=#{CYAN}"
set -g pane-border-lines single
set -g pane-border-indicators both


# active window
set -g window-status-current-style "fg=#{MAGENTA} bold"
set -g window-status-style "fg=#{MUTED}"
set -g window-status-separator " "
set -g window-status-format "#[fg=#{BLACK}]█#[fg=#{MUTED},bg=#{BLACK}][#I] #W #{window_flags}#[bg=default fg=#{BLACK}]█"
set -g window-status-current-format "#[fg=#{MAGENTA}]█#[fg=#{BLACKER},bg=#{MAGENTA}][#I] #W #{window_flags}#[bg=default fg=#{MAGENTA}]█"

# Force 256color terminal (with true color capabilities)
set -a terminal-features "xterm-256color:RGB"

set-hook -g 'after-new-window'   "run-shell -b 'if [ #{window_panes} -gt 1 ]; then tmux setenv -g IS_SPLIT 1; else tmux setenv -g IS_SPLIT 0; fi'"
set-hook -g 'after-kill-pane'    "run-shell -b 'if [ #{window_panes} -gt 1 ]; then tmux setenv -g IS_SPLIT 1; else tmux setenv -g IS_SPLIT 0; fi'"
set-hook -g 'pane-exited'        "run-shell -b 'if [ #{window_panes} -gt 1 ]; then tmux setenv -g IS_SPLIT 1; else tmux setenv -g IS_SPLIT 0; fi'"
set-hook -g 'after-split-window' "run-shell -b 'if [ #{window_panes} -gt 1 ]; then tmux setenv -g IS_SPLIT 1; else tmux setenv -g IS_SPLIT 0; fi'" 


# CUSTOM STATUSLINE
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
set -g status on
set -g status-style default
set -g status-position bottom
set -g automatic-rename on
set -g status-justify centre

set -g status-style "bg=#{BLACKER}"
set -g pane-border-style "bg=#{BLACK} fg=#{WHITE}"
set -g status-right-length 50
set -g status-left-length 50

set -g status-left '#{?client_prefix,\
#[bg=#{RED} fg=#{BLACKER} bold] 󰡖 $#{pane_current_command} #[bg=#{BLACKER} fg=#{RED}],\
#[fg=#{BLACKER} bg=#{GREEN}] 󰄱 $#{pane_current_command} #[bg=#{BLACKER} fg=#{GREEN}]}'

set -g status-right '#{?IS_SPLIT, \
#[bg=#{CYAN} fg=#{BLACKER}]#{?window_zoomed_flag, \
  ,#{?pane_in_mode,  ,  } }, #{?pane_in_mode, #[bg=#{CYAN} fg=#{BLACKER}]  #[bg=default fg=#{CYAN}], }\
}#[fg=#{BLACKER} bg=#{WHITE}, italics] #{session_name}  '


# PLUGINS
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
# base
set -g @plugin "tmux-plugins/tpm"
set -g @plugin "tmux-plugins/tmux-sensible"
# session stuf
set -g @plugin "tmux-plugins/tmux-resurrect"
set -g @resurrect-dir "$HOME/.local/share/tmux/resurrect"
set -g @resurrect-capture-pane-contents "on"
set -g @resurrect-processes ":all:"
set -g @resurrect-save-shell-history "off"
set -g @resurrect-strategy-vim "session"
set -g @resurrect-strategy-nvim "session"
set -g @resurrect-processes 'ssh'


# yanking
set -g @plugin "tmux-plugins/tmux-yank"

# navigation
set -g @plugin "christoomey/vim-tmux-navigator"

# opening
set -g @plugin 'tmux-plugins/tmux-open'

# run plugin manager
run "$HOME/.config/tmux/plugins/tpm/tpm"

#popups wrapper
set -g @plugin "loichyan/tmux-toggle-popup"
set -wg popup-border-style "bg=#{BLACKER}, fg=#{BLACKER}"
set-option -wg popup-style "bg=#{BLACKER}, fg=default"


