#!/bin/bash

# Initialize vars for storage
NON_IMG_AMOUNT=0
CONV_AMOUNT=0
RESIZED_AMOUNT=0
LARGE_FILES=0
NON_IMG_NAMES=()
CONV_NAMES=()
RESIZED_NAMES=()
LARGE_FILE_NAMES=()

# Directory containing the images
IMG_DIR="$HOME/.config/hypr-wallpapers"

# Function to process each file.
process_file() {
	local file="$1"
	local self="wall-checker"
	# Check if the file is an image.
	if ! file "$file" | grep -q "image" && [[ $(basename "$file") != "$self" ]]; then
		NON_IMG_AMOUNT=$((NON_IMG_AMOUNT + 1))
		NON_IMG_NAMES+=("$file")
		return 0
	fi

	# Check if the file is a PNG and convert it to PNG if not.
	local extension="${file##*.}"
	if [[ "$extension" != "png" ]] && [[ $(basename "$file") != "$self" ]]; then
		echo "magick -quiet -define png:compression-level=9 -define png:compression-filter=5 \"$file\" \"${file%.*}.png\"" | parallel --line-buffer
		CONV_AMOUNT=$((CONV_AMOUNT + 1))
		CONV_NAMES+=("${file%.*}.png")
		# Update file name to converted png
		file="${file%.*}.png"
	fi

	# Check the resolution and crop if necessary.
	if [[ $(basename "$file") != "$self" ]]; then
		local width=$(identify -format '%w' "$file")
		local height=$(identify -format '%h' "$file")
	fi

	if [[ "$width" != "3840" || "$height" != "2160" ]] && [[ $(basename "$file") != "$self" ]]; then
		# First, resize to fit within the desired aspect ratio, using larger dimension for 16:9 aspect.
		echo "magick \"$file\" -resize '3840x2160^' -gravity center -crop 3840x2160+0+0 +repage \"$file\"" | parallel --line-buffer
		RESIZED_AMOUNT=$((RESIZED_AMOUNT + 1))
		RESIZED_NAMES+=("$file")
	fi

	# Check if the file size is larger than 6MB.
	local size=$(stat -c%s "$file")
	if [[ "$size" -gt "6291456" ]] && [[ $(basename "$file") != "$self" ]]; then
		LARGE_FILES=$((LARGE_FILES + 1))
		LARGE_FILE_NAMES+=("$file")
	fi
}

# Process each file in the directory.
for file in "$IMG_DIR"/*; do
	process_file "$file"
done

# Print final report with conditional sections.
echo -e "\n\\033[0;32mReport after processing content of wallpapers directory:\\033[0m\n"
echo "1. Non-image files: $NON_IMG_AMOUNT"
if [[ $NON_IMG_AMOUNT -eq 0 ]]; then
	printf "   No non-image files present.\n\n"
else
	for name in "${NON_IMG_NAMES[@]}"; do
		echo "   $(basename "$name")"
	done
	printf "\n\n"
fi

echo "2. Files converted to png: $CONV_AMOUNT"
if [[ $CONV_AMOUNT -eq 0 ]]; then
	printf "   No files converted.\n\n"
else
	for name in "${CONV_NAMES[@]}"; do
		echo "   $(basename "$name")"
	done
	printf "\n\n"
fi

echo "3. Resized pictures: $RESIZED_AMOUNT"
if [[ $RESIZED_AMOUNT -eq 0 ]]; then
	printf "   No resized pictures.\n\n"
else
	for name in "${RESIZED_NAMES[@]}"; do
		echo "   $(basename "$name")"
	done
	printf "\n\n"
fi

echo "4. Files larger than 6mb: $LARGE_FILES"
if [[ $LARGE_FILES -eq 0 ]]; then
	echo "   No files larger than 6mb."
else
	for name in "${LARGE_FILE_NAMES[@]}"; do
		echo "   $(basename "$name")"
	done
fi
