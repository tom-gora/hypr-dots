-- for overriding the highlight groups
local function mod_hl(hl_name, opts)
  local is_ok, hl_def = pcall(vim.api.nvim_get_hl, 0, { name = hl_name })
  if is_ok then
    for k, v in pairs(opts) do
      hl_def[k] = v
      ---@diagnostic disable-next-line: param-type-mismatch
      vim.api.nvim_set_hl(0, hl_name, hl_def)
    end
  end
end

-- force tabline bg color with native vimscript because IDK why it bloody breaks

vim.api.nvim_create_autocmd({ "VimEnter", "ColorScheme" }, {
  group = vim.api.nvim_create_augroup("Color", {}),
  pattern = "*",
  callback = function()
    -- hls for tabline
    mod_hl("BufferCurrentSignRight", { bg = "#191724", fg = "#102a34" })
    mod_hl("BufferCurrentSign", { bg = "#191724", fg = "#102a34" })
    mod_hl("BufferCurrent", { bg = "#102a34", bold = true })
    mod_hl("BufferCurrentIndex", { bg = "#102a34", bold = true })
    mod_hl("BufferCurrentMod", { fg = "#b4637a", bg = "#102a34" })
    mod_hl("BufferVisible", { fg = "#232136", bg = "#575279", bold = true })
    mod_hl("BufferVisibleMod", { fg = "#4b242f", bg = "#575279" })
    mod_hl("BufferVisibleSign", { bg = "#191724", fg = "#575279" })
    mod_hl("BufferVisibleIndex", { fg = "#232136", bg = "#575279", bold = true })
    mod_hl("BufferTabpageFill", { link = "none", bg = "none", force = true })
    -- modifications to various float windows: telescope, oil etc
    mod_hl("FloatBorder", { fg = "#56949f", bg = "#191724" })
    mod_hl("LspInfoBorder", { link = "FloatBorder", force = true })
    mod_hl("Float", { bg = "#191724" })
    mod_hl("NormalFloat", { bg = "#191724" })
    mod_hl("WhichKeyFloat", { bg = "#191724" })
    mod_hl("TelescopeBorder", { link = "FloatBorder", force = true })
    mod_hl("TelescopeTitle", { fg = "#c4a7e7", link = "TelescopeTitle", force = true })
    mod_hl("LazyBackdrop", { bg = "#191724", force = true })
    -- costom rainbow-delimiters colors (base rose-pine with bumped up saturation)
    mod_hl("RainbowDelimiterYellow", { fg = "#fdc270", force = true })
    mod_hl("RainbowDelimiterRed", { fg = "#fa608b", force = true })
    mod_hl("RainbowDelimiterOrange", { fg = "#fa8b87", force = true })
    mod_hl("RainbowDelimiterBlue", { fg = "#239acb", force = true })
    mod_hl("RainbowDelimiterGreen", { fg = "#8bdae9", force = true })
    mod_hl("RainbowDelimiterViolet", { fg = "#c49cf2", force = true })
    mod_hl("RainbowDelimiterCyan", { fg = "#3c2e9d", force = true })
    -- highlights for statusline that I wrote for old nvchad config that I lifted and modified to my needs
    -- my custom hls used in this statusline config:
    mod_hl("St_NormalMode_Root_Sep", { bg = "#191724", fg = "#d7827e", bold = false })
    mod_hl("St_VisualMode_Root_Sep", { bg = "#191724", fg = "#a3d6df", bold = false })
    mod_hl("St_InsertMode_Root_Sep", { bg = "#121019", fg = "#bb9ede", bold = false })
    mod_hl("St_TerminalMode_Root_Sep", { bg = "#121019", fg = "#abe9b3", bold = false })
    mod_hl("St_NTerminalMode_Root_Sep", { bg = "#121019", fg = "#d7827e", bold = false })
    mod_hl("St_ReplaceMode_Root_Sep", { bg = "#121019", fg = "#f6c177", bold = false })
    mod_hl("St_SelectMode_Root_Sep", { bg = "#121019", fg = "#8bbec7", bold = false })
    mod_hl("St_CommandMode_Root_Sep", { bg = "#121019", fg = "#abe9b3", bold = false })
    mod_hl("St_ConfirmMode_Root_Sep", { bg = "#121019", fg = "#6aadc8", bold = false })
    mod_hl("St_Root", { bg = "#121019", fg = "#bcbac9", bold = false })
    mod_hl("St_Root_Sep_Right", { bg = "#262431", fg = "#121019", bold = false })
    mod_hl("St_NormalModeCustomTxt", { bg = "#d7827e", fg = "#191724", bold = true })
    mod_hl("St_VisualModeCustomTxt", { bg = "#a3d6df", fg = "#191724", bold = true })
    mod_hl("St_InsertModeCustomTxt", { bg = "#bb9ede", fg = "#191724", bold = true })
    mod_hl("St_TerminalModeCustomTxt", { bg = "#abe9b3", fg = "#191724", bold = true })
    mod_hl("St_NTerminalModeCustomTxt", { bg = "#abe9b3", fg = "#191724", bold = true })
    mod_hl("St_ReplaceModeCustomTxt", { bg = "#f6c177", fg = "#191724", bold = true })
    mod_hl("St_SelectModeCustomTxt", { bg = "#8bbec7", fg = "#191724", bold = true })
    mod_hl("St_CommandModeCustomTxt", { bg = "#abe9b3", fg = "#191724", bold = true })
    mod_hl("St_ConfirmModeCustomTxt", { bg = "#6aadc8", fg = "#191724", bold = true })
    -- default hls used by nvchad extracted from that old config and injected into my config
    mod_hl("St_CommandMode", { bg = "#191724", bold = true, fg = "#ABE9B3" })
    mod_hl("St_CommandModeCustomTxt", { bg = "#ABE9B3", bold = true, fg = "#191724" })
    mod_hl("St_CommandModeSep", { bg = "#191724", bold = true, fg = "#ABE9B3" })
    mod_hl("St_CommandMode_Root_Sep", { bg = "#121019", fg = "#ABE9B3" })
    mod_hl("St_CommandmodeText", { bg = "#262431", bold = true, fg = "#ABE9B3" })
    mod_hl("St_ConfirmMode", { bg = "#191724", bold = true, fg = "#6AADC8" })
    mod_hl("St_ConfirmModeCustomTxt", { bg = "#6AADC8", bold = true, fg = "#191724" })
    mod_hl("St_ConfirmModeSep", { bg = "#191724", bold = true, fg = "#6AADC8" })
    mod_hl("St_ConfirmMode_Root_Sep", { bg = "#121019", fg = "#6AADC8" })
    mod_hl("St_ConfirmmodeText", { bg = "#262431", bold = true, fg = "#6AADC8" })
    mod_hl("St_EmptySpace", { fg = "#191724" })
    mod_hl("St_EmptySpace2", { fg = "#191724" })
    mod_hl("St_InsertMode", { bg = "#191724", bold = true, fg = "#BB9EDE" })
    mod_hl("St_InsertModeCustomTxt", { bg = "#BB9EDE", bold = true, fg = "#191724" })
    mod_hl("St_InsertModeSep", { bg = "#191724", bold = true, fg = "#BB9EDE" })
    mod_hl("St_InsertMode_Root_Sep", { bg = "#121019", fg = "#BB9EDE" })
    mod_hl("St_InsertmodeText", { bg = "#262431", bold = true, fg = "#BB9EDE" })
    mod_hl("St_LspHints", { fg = "#C4A7E7" })
    mod_hl("St_LspInfo", { fg = "#ABE9B3" })
    mod_hl("St_LspProgress", { fg = "#ABE9B3" })
    mod_hl("St_LspStatus_Icon", { bg = "#86B9C2", fg = "#191724" })
    mod_hl("St_NTerminalMode", { bg = "#191724", bold = true, fg = "#D7827E" })
    mod_hl("St_NTerminalModeCustomTxt", { bg = "#ABE9B3", bold = true, fg = "#191724" })
    mod_hl("St_NTerminalModeSep", { bg = "#191724", bold = true, fg = "#F6C177" })
    mod_hl("St_NTerminalMode_Root_Sep", { bg = "#121019", fg = "#D7827E" })
    mod_hl("St_NTerminalmodeText", { bg = "#262431", bold = true, fg = "#F6C177" })
    mod_hl("St_NormalMode", { bg = "#191724", bold = true, fg = "#D7827E" })
    mod_hl("St_NormalModeCustomTxt", { bg = "#D7827E", bold = true, fg = "#191724" })
    mod_hl("St_NormalModeSep", { bg = "#191724", bold = true, fg = "#8BBEC7" })
    mod_hl("St_NormalMode_Root_Sep", { bg = "#121019", fg = "#D7827E" })
    mod_hl("St_NormalmodeText", { bg = "#262431", fg = "#D7827E" })
    mod_hl("St_Pos_bg", { bg = "#F6C177", fg = "#191724" })
    mod_hl("St_Pos_sep", { bg = "#191724", fg = "#F6C177" })
    mod_hl("St_Pos_txt", { bg = "#262431", fg = "#F6C177" })
    mod_hl("St_ReplaceMode", { bg = "#191724", bold = true, fg = "#F6C177" })
    mod_hl("St_ReplaceModeCustomTxt", { bg = "#F6C177", bold = true, fg = "#191724" })
    mod_hl("St_ReplaceModeSep", { bg = "#191724", bold = true, fg = "#F6C177" })
    mod_hl("St_ReplaceMode_Root_Sep", { bg = "#121019", fg = "#F6C177" })
    mod_hl("St_ReplacemodeText", { bg = "#262431", bold = true, fg = "#F6C177" })
    mod_hl("St_Root", { bg = "#121019", fg = "#BCBAC9" })
    mod_hl("St_Root_Sep_Right", { bg = "#262431", fg = "#121019" })
    mod_hl("St_SelectMode", { bg = "#191724", bold = true, fg = "#8BBEC7" })
    mod_hl("St_SelectModeCustomTxt", { bg = "#8BBEC7", bold = true, fg = "#191724" })
    mod_hl("St_SelectModeSep", { bg = "#191724", bold = true, fg = "#8BBEC7" })
    mod_hl("St_SelectMode_Root_Sep", { bg = "#121019", fg = "#8BBEC7" })
    mod_hl("St_SelectmodeText", { bg = "#262431", bold = true, fg = "#8BBEC7" })
    mod_hl("St_TerminalMode", { bg = "#191724", bold = true, fg = "#ABE9B3" })
    mod_hl("St_TerminalModeCustomTxt", { bg = "#ABE9B3", bold = true, fg = "#191724" })
    mod_hl("St_TerminalModeSep", { bg = "#191724", bold = true, fg = "#ABE9B3" })
    mod_hl("St_TerminalMode_Root_Sep", { bg = "#121019", fg = "#ABE9B3" })
    mod_hl("St_TerminalmodeText", { bg = "#262431", bold = true, fg = "#ABE9B3" })
    mod_hl("St_VisualMode", { bg = "#191724", bold = true, fg = "#A3D6DF" })
    mod_hl("St_VisualModeCustomTxt", { bg = "#A3D6DF", bold = true, fg = "#191724" })
    mod_hl("St_VisualModeSep", { bg = "#191724", bold = true, fg = "#A3D6DF" })
    mod_hl("St_VisualMode_Root_Sep", { bg = "#121019", fg = "#A3D6DF" })
    mod_hl("St_VisualmodeText", { bg = "#262431", bold = true, fg = "#A3D6DF" })
    mod_hl("St_cwd_bg", { bg = "#F6C177", fg = "#191724" })
    mod_hl("St_cwd_sep", { bg = "#191724", fg = "#F6C177" })
    mod_hl("St_cwd_txt", { bg = "#262431", fg = "#F6C177" })
    mod_hl("St_file_bg", { bg = "#EB6F92", fg = "#191724" })
    mod_hl("St_file_info", { fg = "#E0DEF4" })
    mod_hl("St_file_sep", { bg = "#191724", fg = "#EB6F92" })
    mod_hl("St_file_txt", { bg = "#262431", fg = "#EB6F92" })
    mod_hl("St_gitIcons", { bold = true, fg = "#8986A1" })
    mod_hl("St_lspError", { fg = "#EB6F92" })
    mod_hl("St_lspWarning", { fg = "#F6C177" })
    mod_hl("St_lsp_bg", { bg = "#ABE9B3", fg = "#191724" })
    mod_hl("St_lsp_sep", { bg = "#191724", fg = "#ABE9B3" })
    mod_hl("St_lsp_txt", { bg = "#262431", fg = "#ABE9B3" })
    mod_hl("St_sep_r", { fg = "#262431" })
    mod_hl("St_macro_sep", { fg = "#282c39", bg = "none" })

    -- miniindentscope indentation guides
    mod_hl("MiniIndentscopeSymbol", { link = "BufferVisibleSign", force = true })
    -- supermaven icon
    mod_hl("CmpItemKindSupermaven", { link = "DevIconXz", force = true })
    mod_hl("ToggleTerm1StatusLine", { bg = "#191724", force = true })
    -- adjust lspsaga beacon
    mod_hl("SagaBeacon", { bg = "#3e8fb0", force = true })
  end,

})
