-- if init_debug then
-- 	vim.notify("Attempting to start OSV debugger early...", vim.log.levels.INFO)
-- 	local home = os.getenv("HOME")
-- 	if not home then
-- 		vim.notify("HOME environment variable not retrieved.", vim.log.levels.ERROR)
-- 		goto continue
-- 	end
-- 	local plugin_base_path = home .. "/.local/share/nvim/lazy/one-small-step-for-vimkind/"
-- 	local plugin_lua_path = plugin_base_path .. "lua/"
--
-- 	local stat_path = vim.loop.fs_stat(plugin_lua_path)
-- 	if not stat_path then
-- 		vim.notify("OSV plugin lua path not found at: " .. plugin_lua_path, vim.log.levels.ERROR)
-- 		goto continue
-- 	end
--
-- 	-- THIS IS THE CRITICAL PART:
-- 	-- We need to add the plugin's Lua directory to package.path
-- 	-- So that `require('osv')` works from anywhere, including inside OSV itself
-- 	package.path = plugin_lua_path .. "?.lua;" .. plugin_lua_path .. "?/init.lua;" .. package.path
-- 	vim.notify("Updated package.path for OSV.", vim.log.levels.DEBUG)
--
-- 	-- Now use require instead of dofile
-- 	local ok, osv_module = pcall(require, "osv")
-- 	if not ok or not osv_module then
-- 		vim.notify("Failed to require OSV module: " .. tostring(osv_module), vim.log.levels.ERROR)
-- 		goto continue
-- 	end
--
-- 	vim.notify("Successfully required OSV module. Launching debugger...", vim.log.levels.INFO)
-- 	local ok_launch, err_launch = pcall(osv_module.launch, {
-- 		port = 8086,
-- 		blocking = true,
-- 	})
--
-- 	if not ok_launch then
-- 		vim.notify("Failed to launch debugger!" .. err_launch, vim.log.levels.ERROR)
-- 		goto continue
-- 	end
-- 	local messages = vim.fn.execute("messages")
-- 	local it = vim.iter(vim.split(messages, "\n"))
-- 	vim.notify(it:last())
--
-- 	::continue::
-- end
--
-- setup custom "stolen" theme, not managed as a plugin
require("tomeczku.core.custom_theme").setup()
-- bring in the rest of the configs
require("tomeczku.core")
